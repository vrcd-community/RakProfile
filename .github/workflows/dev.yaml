name: Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/dockerhub/build/vrcd-rak-profile:latest
            ${{ secrets.DOCKER_REGISTRY }}/dockerhub/build/vrcd-rak-profile:${{ github.sha }}
          build-args: |
            NODE_ENV=production
            BOOKSTACK_BASEURL=${{ secrets.BOOKSTACK_BASEURL }}
            LOGTO_BASEURL=${{ secrets.LOGTO_BASEURL }}
            BOOKSTACK_API_ID=${{ secrets.BOOKSTACK_API_ID }}
            BOOKSTACK_API_SECRET=${{ secrets.BOOKSTACK_API_SECRET }}
            LOGTO_APP_ID=${{ secrets.LOGTO_APP_ID }}
            LOGTO_APP_SECRET=${{ secrets.LOGTO_APP_SECRET }}
            DB_HOST: postgres
            DB_PORT: 5432
            DB_USER: postgres
            DB_PASSWORD: postgres
            DB_DATABASE: postgres

      - name: Update Deployment Image Tag in Kubernetes (Kuboard)
        run: |
          curl -X PUT \
            -k \
            -H "content-type: application/json" \
            -H "Cookie: KuboardUsername=${{ secrets.KUBOARD_USERNAME }}; KuboardAccessKey=${{ secrets.KUBOARD_ACCESS_KEY }}" \
            -d '{"kind":"deployments","namespace":"dev","name":"vrcd-rak-profile","images":{"${{ secrets.DOCKER_REGISTRY }}/dockerhub/build/vrcd-rak-profile":"${{ secrets.DOCKER_REGISTRY }}/dockerhub/build/vrcd-rak-profile:${{ github.sha }}"}}' \
            "${{ secrets.KUBOARD_API_URL }}"
